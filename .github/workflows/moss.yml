name: Moss

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  pre-checks:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Check Commit Message
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '(\[[\.\w\d\s_-]+\])+ .+$'
          flags: 'gm'
          error: 'Your first line has to contain a commit type like "[abc] commit message."'
          excludeDescription: 'true' # optional: this excludes the description body of a pull request
          excludeTitle: 'true' # optional: this excludes the title of a pull request
          checkAllCommitMessages: 'true' # optional: this checks all commits associated with a pull request
          accessToken: ${{ secrets.GITHUB_TOKEN }} # github access token is only required if checkAllCommitMessages is true

      - uses: actions/checkout@v2
      - name: Run clang-format style check for C/C++ programs.
        uses: jidicula/clang-format-action@v4.6.2
        with:
          clang-format-version: '14'
          check-path: 'SourceCode'
          fallback-style: 'LLVM' # optional

  build-on-linux:
    runs-on: ubuntu-22.04
    needs:
      - pre-checks

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Build In Docker
      shell: bash
      working-directory: ${{runner.workspace}}/${{github.event.repository.name}}/Docker
      run: |
        docker-compose run moss-build-alpine -c -t
        docker-compose run moss-build -c -t
        docker-compose run moss-dev -c -t

    - uses: actions/upload-artifact@v2
      with:
        name: build-on-linux-${{env.BUILD_TYPE}}
        path: ${{runner.workspace}}/

# disable build-on-mac, because 1 macOS minute counts as 10 regular minutes, enable this build when necessary
  build-on-mac:
    if: false # change it to true to build on mac
    runs-on: macos-12
    needs:
      - pre-checks

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install Dependencies
        shell: bash
        run: brew install coreutils ninja qemu iwyu llvm

      - name: Build
        shell: bash
        run: export PATH="/usr/local/opt/llvm/bin:$PATH" && $GITHUB_WORKSPACE/Scripts/Build/rpi3.build.sh -c -t

      - uses: actions/upload-artifact@v2
        with:
          name: build-on-mac-${{env.BUILD_TYPE}}
          path: ${{runner.workspace}}/
